name: FastAPI CICD with Docker

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Docker 이미지 빌드 및 푸시
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fastapi-server
          no-cache: true

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST_IP }}
          username: ${{ secrets.AWS_HOST_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            # EC2에 SSH로 접속하여 Docker 작업 수행
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-server:latest
            
            # 동일한 이름의 컨테이너가 실행 중이면 삭제
            if [ $(docker ps -aq -f name=ai-server) ]; then
              docker stop ai-server
              docker rm ai-server
            fi
            
            # 새 컨테이너 실행
            docker run -d --name ai-server --log-driver=syslog -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-server
